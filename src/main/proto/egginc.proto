syntax = "proto3";
option java_package = "com.auxbrain.ei";
option java_outer_classname = "EggInc";

message Backup {
  string userId = 1;
  optional string userName = 2;
  double approxTime = 3;
//  Settings settings = 4;
//  Tutorial tutorial = 5;
  Stats stats = 6;
  Game game = 7;
//  Missions missions = 9;
//  Misc misc = 10;
  repeated Farm farms = 12;
  MyContracts contracts = 13;
  ArtifactsStatus artifactsStatus = 14;
  ArtifactsDatabase artifactsDatabase = 15;
  string gameServicesId = 16;
  string deviceId = 17;
  string eiUserId = 18;
//  bool forceOfferBackup = 20;
  uint32 clientVersion = 21;
//  bool forceBackup = 22;
//  uint64 checksum = 100;
//  string signature = 101;

  message Settings {
//    bool sfx = 1;
//    bool music = 2;
//    bool lowBatteryMode = 3;
//    bool lowPerformanceMode = 4;
//    bool notificationsQueried = 5;
//    bool notificationsEnabled = 6;
//    bool coppaQueried = 7;
//    bool coppaRestricted = 8;
//    bool forceTouchChickenBtn = 9;
//    bool lowPerformance = 10;
//    bool notifyDailyGift = 11;
//    bool gdprConsentQueried = 12;
//    bool gdprConsentGiven = 13;
//    bool userAdsEnabled = 14;
//    bool userCloudEnabled = 15;
//    bool gdprAgeRestricted = 16;
//    uint32 lastDayAgeQueried = 17;
//    bool ageQueried = 18;
//    bool ageRestricted = 19;
//    bool dataCollectionConsentQueried = 20;
//    bool dataCollectionConsentGiven = 21;
//    bool userAnalyticsEnabled = 22;
//    bool userPersonalizedAdsEnabled = 23;
    double lastBackupTime = 24;
  }

  message Tutorial {
    bool introShown = 1;
    bool clickTutorialShown = 2;
    bool buyHabShown = 3;
    bool hireVehicleShown = 4;
    bool qNumShown = 5;
    bool sNumShown = 6;
    bool contractsTabShown = 7;
    bool contractInfoShown = 8;
    bool joinCoopShown = 9;
    bool switchFarmShown = 10;
    repeated bool tutorialsShown = 11;
  }

  message Stats {
//    uint64 refillUses = 2;
//    uint64 videoDoublerUses = 3;
//    uint64 warp_1Uses = 4;
//    uint64 warp_8Uses = 5;
    uint64 droneTakedowns = 6;
//    uint64 unlimitedChickensUses = 7;
//    repeated double eggTotals = 8;
    uint64 prestiges = 9;
    uint64 droneTakedownsElite = 10;
//    uint64 piggyBreaks = 11;
//    uint64 iapPacksPurchased = 12;
//    uint64 boostsUsed = 13;
//    bool piggyFull = 14;
//    bool piggyFoundFull = 15;
//    double timePiggyFilledRealtime = 16;
//    double timePiggyFullGametime = 17;
//    uint64 lostPiggyIncrements = 18;
  }

  message ResearchItem {
    string id = 1;
    uint32 level = 2;
  }

  message NewsHeadline {
    string id = 1;
    bool read = 2;
  }

  message AchievementInfo {
    string name = 1;
    bool achieved = 2;
  }

  message ActiveBoost {
    string id = 1;
    double timeRemaining = 2;
    double referenceValue = 3;
  }

  message OwnedBoost {
    string id = 1;
    uint32 count = 2;
  }

  message Game {
//    Egg maxEggReached = 1;
//    uint64 goldenEggsEarned = 2;
//    uint64 goldenEggsSpent = 3;
//    double prestigeCashEarned = 5;
//    double lifetimeCashEarned = 6;
//    uint64 piggyBank = 7;
    uint32 permitLevel = 8;
    repeated ResearchItem epicResearch = 9;
//    double nextDailyGiftTime = 10;
//    repeated NewsHeadline news = 11;
//    double lastNewsTime = 12;
//    double currentMultiplier = 13;
//    double currentMultiplierExpiration = 14;
//    repeated AchievementInfo achievements = 15;
//    uint64 unclaimedGoldenEggs = 16;
//    repeated uint64 maxFarmSizeReached = 18;
//    repeated TrophyLevel eggMedalLevels = 19;
//    uint32 lastDailyGiftCollectedDay = 20;
//    uint32 currentFarm = 22;
    uint64 prophecyEggs = 23;
//    uint32 unclaimedProphecyEggs = 24;
//    bool longIdleNotificationSet = 25;
//    double longIdleNotificationThreshold = 26;
//    double longIdleReward = 27;
//    uint32 dailyGiftIndex = 28;
//    bool hyperloopStation = 29;
//    repeated OwnedBoost boosts = 30;
//    bool piggyFullAlertShown = 31;
//    uint32 totalTimeCheatsDetected = 32;
//    double prestigeSoulBoostCash = 33;
    double soulEggs = 34;
//    double unclaimedSoulEggs = 35;
//    bool forceEliteContracts = 36;
//    double newPlayerEventEndTime = 37;
  }

  message ArtifactsStatus {
    bool infusing = 1;
    ArtifactInventoryItem itemBeingInfused = 2;
    Egg eggTypeInfusing = 3;
    double infusingEggsRequired = 4;
    double eggsInfused = 5;
    double flowPercentageArtifacts = 6;
    bool fuelingEnabled = 7;
    bool infusingEnabled = 8;
    .Mission.Spaceship lastFueledShip = 9;
    double inventoryScore = 10;
    bool enabled = 11;
    bool introShown = 12;
    Artifact artifactBeingInfused = 13;
  }

  message Farm {
    Egg egg = 1;
//    double cashEarned = 2;
//    double cashSpent = 3;
//    double unclaimedCash = 4;
    double lastStepTime = 5;
    uint64 chickens = 6;
//    uint64 unsettledChicken = 7;
    uint64 runningChicken = 8;
    double eggsLaid = 9;
//    double eggsPaidFor = 10;
    uint32 silosOwned = 11;
    repeated HabLevel habs = 12;
    repeated uint64 habPopulations = 13;
    repeated uint64 habPopulationInbounds = 14;
    repeated double habIncubatorPopulations = 15;
//    double hatcheryPopulation = 16;
    repeated VehicleType vehicles = 17;
    repeated ResearchItem commonResearch = 18;
    FarmType farmType = 19;
    string contractId = 20;
    repeated uint32 hyperloopCars = 21;
    repeated ActiveBoost activeBoosts = 22;
//    uint32 timeCheatsDetected = 23;
//    double timeCheatDebt = 24;
    uint32 boostTokensReceived = 25;
    uint32 boostTokensSpent = 26;
    uint32 unclaimedBoostTokens = 27;
    uint32 boostTokensGiven = 28;
//    double gametimeUntilNextBoostToken = 29;
    double eggsShipped = 30;
  }

//  message Mission {
//    string id = 1;
//    bool completed = 2;
//    double referenceValue = 3;
//  }

//  message Missions {
//    string currentMissionName = 1;
//    double referenceValue = 2;
//    repeated Mission missions = 3;
//    repeated string currentMissions = 4;
//  }

//  message Misc {
//    bool chickenBtnPrefBig = 1;
//    bool freeHatcheryRefillGiven = 2;
//    double lastShareFarmValue = 3;
//    double lastShareSwarmFarmValue = 4;
//    double lastShareSwarmSize = 5;
//    uint64 friendRank = 6;
//    uint64 friendRankPop = 7;
//    uint64 globalRank = 8;
//    uint64 globalRankPop = 9;
//    uint64 lastPrestigeAlertSoulEggs = 10;
//    bool trophyAlert = 11;
//    bool arAlert = 12;
//    bool contractsAlert = 13;
//    bool coopAlert = 14;
//    bool switchAlert = 15;
//    bool eggOfProphecyAlert = 16;
//    bool boostTokenAlert = 17;
//    bool soulEggAlert = 18;
//    bool backupReminderAlert = 19;
//  }
}

/* https://www.auxbrain.com/ei/first_contact */

message FirstContactRequest {
  string userId = 1;
  uint32 clientVersion = 2;
  uint32 platform = 3;
  string eiUserId = 4;
  string deviceId = 5;
  string username = 6;
  string gameServicesId = 7;
  BasicRequestInfo requestInfo = 8;
}

message FirstContactResponse {
  FirstContact firstContact = 1;
  string checksum = 2;
}

message FirstContact {
  Backup backup = 1;
  string eiUserId = 2;
  repeated string idsTransferred = 3;
  ErrorCode errorCode = 4;
  string errorMessage = 5;
}

enum ErrorCode {
  NO_ERROR = 0;
  EXISTING_USER_W_GAMER_ID = 1;
  USER_NOT_FOUND = 2;
  BACKUP_CONFLICT = 3;
}

message Reward {
  RewardType rewardType = 1;
  string rewardSubType = 2;
  double rewardAmount = 3;
}

message Contract {
  string id = 1;
  Egg egg = 2;
  repeated Goal goals = 3;
  bool coopAllowed = 4;
  uint32 maxCoopSize = 5;
  double expirationTime = 6;
  double lengthSeconds = 7;
  string name = 9;
//  string description = 10;
//  bool debug = 11;
  uint32 maxBoosts = 12;
  double maxSoulEggs = 13;
//  uint32 minClientVersion = 14;
//  double minutesPerToken = 15;
  repeated GoalSet goalSets = 16;

  message GoalSet {
    repeated Goal goals = 1;
  }

  message Goal {
//    GoalType type = 1;
    double targetAmount = 2;
    RewardType rewardType = 3;
//    string rewardSubType = 4;
    double rewardAmount = 5;
    //    double targetSoulEggs = 6;
  }
}

message BasicRequestInfo {
  string eiUserId = 1;
  uint32 clientVersion = 2;
  string version = 3;
  string build = 4;
  string platform = 5;
}

message ContractsResponse {
  repeated Contract contracts = 1;
  double serverTime = 2;
  uint32 maxEop = 3; // Unknown
  string warningMessage = 4;
}

/* https://www.auxbrain.com/ei/coop_status */

message CoopStatusRequest {
  string contractId = 1;
  string coopId = 2;
  string userId = 3;
  uint32 clientVersion = 4;
  BasicRequestInfo requestInfo = 5;
}

message CoopStatusResponse {
  CoopStatus coopStatus = 1;
  string checksum = 2;
}

message CoopStatus {
  string contractId = 1;
  double totalAmount = 2;
  string coopId = 3;
  repeated ContributionInfo contributors = 4;
  double secondsRemaining = 5;
  bool allMembersReporting = 6;
  double gracePeriodSecondsRemaining = 7; // After 48 hours contract becomes inactive (172800 seconds) more than timeLeft.
  bool autoGenerated = 8;
  string creatorId = 9;
  bool public = 10;
  repeated CoopGift gifts = 11;
  double localTimestamp = 12;

  message CoopGift {
    string userId = 1;
    uint32 amount = 2;
    string userName = 3;
  }

  message ContributionInfo {
    string userId = 1;
    string userName = 2;
    double contributionAmount = 3;
    bool active = 4;
    uint32 platform = 5;
    double contributionRate = 6;
    bool timeCheatDetected = 7;
    int32 rankChange = 8;
    string pushId = 9;
    uint32 banVotes = 10;
    double soulPower = 11;
    uint32 boostTokens = 12;
    repeated CoopBuffState buffHistory = 13;
  }
}

message LocalContract {
  Contract contract = 1;
  string coopId = 2;
  double timeAccepted = 3;
//  bool cancelled = 4;
//  double coopSharedEndTime = 5;
  double lastAmountWhenRewardGiven = 6;
//  bool accepted = 7;
//  bool new = 8;
//  double coopGracePeriodEndTime = 9;
//  bool coopContributionFinalized = 10;
//  double coopLastUploadedContribution = 11;
  uint32 boostsUsed = 12;
  string coopUserId = 13;
  uint32 goalsAchieved = 14;
//  uint32 league = 15;
}

message MyContracts {
  repeated LocalContract contracts = 1;
  repeated LocalContract archived = 2;
//  repeated string contractIdsSeen = 3;
//  repeated CoopStatus coopStatuses = 4;
}

message CoopBuffState {
  double eggLayingRate = 1;
  double earnings = 2;
  double serverTimestamp = 3;
}

message CoopBuffHistory {
  repeated CoopBuffState history = 1;
}

message ServerGift {
  string userId = 1;
  RewardType rewardType = 3;
  string rewardSubType = 4;
  double rewardAmount = 5;
}

/* https://www.auxbrain.com/ei/get_periodicals */

message PeriodicalsRequest {
  string userId = 1;
  bool piggyFull = 2;
  bool piggyFoundFull = 3;
  double secondsFullRealtime = 4;
  double secondsFullGametime = 5;
  uint32 lostIncrements = 7;
  double soulEggs = 8;
  uint32 clientVersion = 10;
  bool debug = 11;
  BasicRequestInfo requestInfo = 12;
}

message LiveConfig {
  string configId = 1;

  BoostsConfig boostsConfig = 2;
  message BoostsConfig {
    repeated ItemConfig itemConfigs = 1;
    message ItemConfig {
      string boostId = 1;
      uint32 price = 2;
      uint32 tokenPrice = 3;
      double seRequired = 4;
    }

    double cashBoostCooloffTime = 2;
  }

  GiftConfig giftConfig = 3;
  message GiftConfig {
    repeated GiftValueConfig giftConfigs = 9;
    message GiftValueConfig {
      string giftId = 1;
      double amount = 4;
      double randMin = 2;
      double randMax = 3;
      double videoMin = 5;
      double videoMax = 6;
    }

    double giftMuMinSpent = 10;
    double giftMuMaxSpent = 11;
    double giftMuOverallMult = 12;
    double packageInterval = 1;
    double videoOfferInterval = 2;
    double videoOfferIntervalContract = 3;
    double videoOfferIntervalPiggyFull = 4;
    double videoOfferIntervalPiggyExtraFull = 5;
    bool videoResetOnIdle = 14;
    double packageIntervalContract = 6;
    double packageIntervalPiggyFull = 7;
    double packageIntervalPiggyExtraFull = 8;
    bool packageResetOnIdle = 13;
  }

  MiscConfig miscConfig = 4;
  message MiscConfig {
    bool askToTrack = 1;
    double askToTrackMinSoulEggs = 2;
    string askToTrackMessage = 3;
    bool askToTrackShowPreDialog = 4;
    bool askToTrackAfterPrivacy = 5;
  }
}

enum Platform {
  IOS = 0;
  DROID = 1;
}

enum DeviceFormFactor {
  PHONE = 0;
  TABLET = 1;
}

enum AdNetwork {
  VUNGLE = 0;
  CHARTBOOST = 1;
  AD_COLONY = 2;
  HYPER_MX = 3;
  UNITY = 4;
  FACEBOOK = 5;
  APPLOVIN = 6;
}

message EggIncAdConfig {
  repeated AdNetwork networkPriority = 1;
}

message DailyGiftInfo {
  uint32 currentDay = 1;
  double secondsToNextDay = 2;
}

message SalesInfoRequest {
  string userId = 1;
  bool piggyFull = 2;
  bool piggyFoundFull = 3;
  double secondsFullRealtime = 4;
  double secondsFullGametime = 5;
  uint32 lostIncrements = 7;
  uint32 currentClientVersion = 10;
}

message IAPSaleEntry {
  string productId = 1;
  double secondsRemaining = 2;
  string discountString = 3;
  string saleId = 4;
}

message SalesInfo {
  repeated IAPSaleEntry sales = 1;
}

message EggIncEvent {
  string identifier = 1;
  double secondsRemaining = 2;
  string type = 3;
  double multiplier = 4;
  string subtitle = 5;
  double startTime = 6;
  double duration = 7;
}

message EggIncCurrentEvents {
  repeated EggIncEvent events = 1;
}

message DeviceInfo {
  string deviceId = 1;
  string advertisingId = 13;
  string platform = 2;
  string formFactor = 3;
  string deviceName = 4;
  string platformVersion = 5;
  string localeCountry = 6;
  string localeLanguage = 7;
  string gpuVendor = 8;
  string gpuModel = 9;
  string deviceBucket = 10;
  uint32 screenWidth = 11;
  uint32 screenHeight = 12;
}

message AppInfo {
  string versionStr = 1;
  uint32 sessions = 2;
  uint32 prestiges = 3;
  uint64 soulEggs = 4;
  uint32 currentEgg = 5;
  uint64 goldEarned = 6;
  uint64 goldSpent = 7;
  uint32 currentMission = 8;
  uint32 piggySize = 9;
  uint64 piggyBreaks = 10;
  uint64 verifiedPiggyBreaks = 29;
  uint64 iapPacksPurchased = 11;
  uint32 permitLevel = 12;
  uint64 videoDoublerUses = 15;
  uint64 droneTakedowns = 18;
  uint64 droneTakedownsElite = 19;
  bool trophiesUnlocked = 20;
  float eggLevel = 21;
  float struggleFactor = 22;
  bool piggyFull = 23;
  bool piggyFoundFull = 24;
  double timePiggyFullRealtime = 25;
  double timePiggyFullGametime = 26;
  uint64 lostPiggyIncrements = 27;
  string saleId = 28;
  uint64 unlimitedChickensUses = 13;
  uint64 refillUses = 14;
  uint64 shortWarpUses = 16;
  uint64 longWarpUses = 17;
}

message ActionKeyValuePair {
  string key = 1;
  string value = 2;
}

message GenericAction {
  string userId = 1;
  string advertisingId = 7;
  float approxTime_DEP = 2;
  double approxTime = 8;
  string actionName = 3;
  repeated ActionKeyValuePair data = 4;
  AppInfo app = 5;
  DeviceInfo device = 6;
}

message VerifyPurchaseRequest {
  BasicRequestInfo rinfo = 6;
  string sku = 1;
  string transactionId = 2;
  string receipt = 3;
  string platform = 4;
  GenericAction log = 5;
}

message VerifyPurchaseResponse {
  bool verified = 1;
  string message = 2;
}

message PeriodicalsResponse {
  Periodicals periodicals = 1;
  string checksum = 2;
}

message InGameMail {
  string id = 1;
  string title = 2;
  string date = 8;
  string message = 3;
  string action = 4;
  string url = 5;
  uint32 platform = 7;
  repeated string builds = 9;
  uint32 minClientVersion = 10;
  uint32 maxClientVersion = 12;
  double minSoulEggs = 11;
  double minMysticalBonus = 13;
  double goldTip = 6;
}

message MailDB {
  repeated InGameMail mail = 1;
}

message Periodicals {
  SalesInfo sales = 1;
  EggIncCurrentEvents events = 2;
  ContractsResponse contracts = 3;
  repeated ServerGift gifts = 4;
  LiveConfig liveConfig = 5;
  MailDB mailBag = 6;
}

message GetPeriodicalsRequest {
  BasicRequestInfo rinfo = 12;
  string userId = 1;
  bool piggyFull = 2;
  bool piggyFoundFull = 3;
  double secondsFullRealtime = 4;
  double secondsFullGametime = 5;
  uint32 lostIncrements = 7;
  double soulEggs = 8;
  double mysticalEarningsMult = 13;
  uint32 eop = 14;
  bool contractsUnlocked = 15;
  bool artifactsUnlocked = 16;
  uint32 currentClientVersion = 10;
  bool debug = 11;
}

message ConfigRequest {
  BasicRequestInfo rinfo = 1;
  double soulEggs = 2;
  bool artifactsEnabled = 3;
  bool fuelTankUnlocked = 4;
}

message ConfigResponse {
  LiveConfig liveConfig = 1;
  MailDB mailBag = 2;
  DLCCatalog dlcCatalog = 3;
}

message ReturnEDTPayload {
  string eiUserId = 1;
}

message DLCItem {
  string name = 1;
  string directory = 2;
  string ext = 3;
  string url = 4;
  string checksum = 5;
}

message DLCCatalog {
  repeated DLCItem items = 1;
}

message AdAttributionRawData {
  string deviceAdId = 1;
  string userId = 4;
  string adNetwork = 2;
  string jsonData = 3;
}

message AdAttributionRow {
  string userId = 1;
  string adId = 2;
  string adNetwork = 3;
  string campaign = 4;
  string keyword = 5;
  string extra = 6;
  float clickDate = 7;
  float downloadDate = 8;
  float approxTime = 9;
}

message AdAttributionInfo {
  string deviceAdId = 1;
  string networkName = 2;
  bool attribution = 3;
  string orgName = 4;
  string orgId = 5;
  string campaignName = 6;
  string campaignId = 7;
  string clickDate = 8;
  string conversionDate = 9;
  string conversionType = 10;
  string geo = 11;
  string adgroupName = 12;
  string adgroupId = 13;
  string keyword = 14;
  string keywordId = 15;
  string keywordExtra = 16;
  string creativesetName = 17;
  string creativesetId = 18;
}

message Mission {
  Spaceship ship = 1;
  Status status = 2;
  DurationType durationType = 3;
  repeated Fuel fuels = 4;
  double durationSeconds = 5;
  double secondsRemaining = 6;
  string identifier = 7;
  double startTimeDerived = 8;
  uint32 capacity = 9;
  string missionLog = 10;

  message Fuel {
    Egg egg = 1;
    double amount = 2;
  }

  enum Spaceship {
    CHICKEN_ONE = 0;
    CHICKEN_NINE = 1;
    CHICKEN_HEAVY = 2;
    BCR = 3;
    MILLENNIUM_CHICKEN = 4;
    CORELLIHEN_CORVETTE = 5;
    GALEGGTICA = 6;
    CHICKFIANT = 7;
    VOYEGGER = 8;
    HENERPRISE = 9;
  }

  enum DurationType {
    SHORT = 0;
    LONG = 1;
    EPIC = 2;
    TUTORIAL = 3;
  }

  enum Status {
    FUELING = 0;
    PREPARE_TO_LAUNCH = 5;
    EXPLORING = 10;
    RETURNED = 15;
    ANALYZING = 16;
    COMPLETE = 20;
    ARCHIVED = 25;
  }
}

message Artifact {
  Name name = 1;
  Level level = 2;
  Rarity rarity = 3;
  Egg egg = 4;

  enum Type {
    ARTIFACT = 0;
    STONE = 1;
    INGREDIENT = 2;
    STONE_INGREDIENT = 3;
  }

  enum Name {
    LUNAR_TOTEM = 0;
    TACHYON_STONE = 1;
    TACHYON_STONE_FRAGMENT = 2;
    NEODYMIUM_MEDALLION = 3;
    BEAK_OF_MIDAS = 4;
    LIGHT_OF_EGGENDIL = 5;
    DEMETERS_NECKLACE = 6;
    VIAL_OF_MARTIAN_DUST = 7;
    GUSSET = 8;
    CHALICE = 9;
    BOOK_OF_BASAN = 10;
    PHOENIX_FEATHER = 11;
    TUNGSTEN_ANKH = 12;
    EXTRATERRESTRIAL_ALUMINUM = 13;
    ANCIENT_TUNGSTEN = 14;
    SPACE_ROCKS = 15;
    ALIEN_WOOD = 16;
    GOLD_METEORITE = 17;
    TAU_CETI_GEODE = 18;
    CENTAURIAN_STEEL = 19;
    ERIDANI_FEATHER = 20;
    AURELIAN_BROOCH = 21;
    CARVED_RAINSTICK = 22;
    PUZZLE_CUBE = 23;
    QUANTUM_METRONOME = 24;
    SHIP_IN_A_BOTTLE = 25;
    TACHYON_DEFLECTOR = 26;
    INTERSTELLAR_COMPASS = 27;
    DILITHIUM_MONOCLE = 28;
    TITANIUM_ACTUATOR = 29;
    MERCURYS_LENS = 30;
    DILITHIUM_STONE = 31;
    SHELL_STONE = 32;
    LUNAR_STONE = 33;
    SOUL_STONE = 34;
    DRONE_PARTS = 35;
    QUANTUM_STONE = 36;
    TERRA_STONE = 37;
    LIFE_STONE = 38;
    PROPHECY_STONE = 39;
    CLARITY_STONE = 40;
    CELESTIAL_BRONZE = 41;
    LALANDE_HIDE = 42;
    SOLAR_TITANIUM = 43;
    DILITHIUM_STONE_FRAGMENT = 44;
    SHELL_STONE_FRAGMENT = 45;
    LUNAR_STONE_FRAGMENT = 46;
    SOUL_STONE_FRAGMENT = 47;
    PROPHECY_STONE_FRAGMENT = 48;
    QUANTUM_STONE_FRAGMENT = 49;
    TERRA_STONE_FRAGMENT = 50;
    LIFE_STONE_FRAGMENT = 51;
    CLARITY_STONE_FRAGMENT = 52;
    UNKNOWN = 65533;
  }

  enum Level {
    INFERIOR = 0;
    LESSER = 1;
    NORMAL = 2;
    GREATER = 3;
    SUPERIOR = 4;
  }

  enum Rarity {
    COMMON = 0;
    RARE = 1;
    EPIC = 2;
    LEGENDARY = 3;
  }
}

enum Type {
  ARTIFACT = 0;
  STONE = 1;
  INGREDIENT = 2;
  STONE_INGREDIENT = 3;
}

message CompleteArtifact {
  Artifact artifactBase = 1;
  repeated Artifact stones = 2;
}

message ArtifactInventoryItem {
  uint64 itemId = 1;
  CompleteArtifact artifact = 2;
  double quantity = 3;
  string serverId = 4;
}

message InventorySlot {
  bool occupied = 1;
  uint32 itemId = 2;
}

/* https://auxbrain.com/ei_afx/config */

message ArtifactsConfigurationRequest {
  uint32 clientVersion = 1;
  BasicRequestInfo requestInfo = 2;
}

message ArtifactsConfigurationResponse {
  ArtifactsConfiguration artifactsConfiguration = 1;
  string checksum = 2;
}

message ArtifactsConfiguration {
  repeated MissionParameters missionParameters = 1;
  repeated ArtifactParameters artifactParameters = 2;

  message MissionParameters {
    Mission.Spaceship ship = 1;
    repeated Duration durations = 3;

    message Duration {
      Mission.DurationType durationType = 1;
      double seconds = 2;
      float quality = 3;
      float minQuality = 4;
      float maxQuality = 5;
      uint32 capacity = 6;
    }
  }

  message ArtifactParameters {
    Artifact artifact = 1;
    double baseQuality = 2;
    double value = 3;
    double oddsMultiplier = 4;
    double craftingPrice = 5;
    double craftingPriceLow = 6;
    uint32 craftingPriceDomain = 7;
    double craftingPriceCurve = 8;
  }
}

message ArtifactsDatabase {
  repeated ArtifactInventoryItem inventoryItems = 1;
  uint64 itemSequence = 2;
  repeated InventorySlot inventorySlots = 3;
//  repeated Mission missions = 4;
//  repeated Mission archivedMissions = 5;
  repeated ActiveArtifactSlot activeArtifacts = 7;
//  repeated Artifact discoveredArtifacts = 8;
//  repeated CraftableArtifact craftableArtifacts = 9;
//  repeated CraftableArtifact craftingCounts = 10;
  repeated ActiveArtifactSet activeArtifactSets = 11;

  message ActiveArtifactSlot {
    bool occupied = 1;
    uint64 itemId = 2;
  }

  message ActiveArtifactSet {
    repeated ActiveArtifactSlot slots = 1;
  }

  message CraftableArtifact {
    Artifact artifact = 1;
    bool seen = 2;
  }
}

message ActiveArtifactSlot {
  bool occupied = 1;
  uint64 itemId = 2;
}

message ActiveArtifactSet {
  repeated ActiveArtifactSlot slots = 1;
}

message CraftableArtifact {
  Artifact artifact = 1;
  bool seen = 2;
  uint32 count = 3;
}

enum Egg {
  UNDEFINED_EGG = 0;
  EDIBLE = 1;
  SUPERFOOD = 2;
  MEDICAL = 3;
  ROCKET_FUEL = 4;
  SUPER_MATERIAL = 5;
  FUSION = 6;
  QUANTUM = 7;
  IMMORTALITY = 8;
  TACHYON = 9;
  GRAVITON = 10;
  DILITHIUM = 11;
  PRODIGY = 12;
  TERRAFORM = 13;
  ANTIMATTER = 14;
  DARK_MATTER = 15;
  AI = 16;
  NEBULA = 17;
  UNIVERSE = 18;
  ENLIGHTENMENT = 19;
  CHOCOLATE = 100;
  EASTER = 101;
  WATER_BALLOON = 102;
  FIREWORK = 103;
  PUMPKIN = 104;
  UNKNOWN_EGG = 65533;
}

enum FarmType {
  UNDEFINED_FARM_TYPE = 0;
  EMPTY = 1;
  HOME = 2;
  CONTRACT = 3;
}

enum GoalType {
  UNDEFINED_GOAL_TYPE = 0;
  EGGS_LAID = 1;
  UNKNOWN_GOAL_TYPE = 100;
}

enum RewardType {
  UNDEFINED_REWARD_TYPE = 0;
  CASH = 1;
  GOLDEN_EGGS = 2;
  SOUL_EGGS = 3;
  PROPHECY_EGGS = 4;
  EPIC_RESEARCH_ITEM = 5;
  PIGGY_FILL = 6;
  PIGGY_MULTIPLIER = 7;
  PIGGY_LEVEL_BUMP = 8;
  BOOST = 9;
  BOOST_TOKEN = 10;
  UNKNOWN_REWARD_TYPE = 100;
}

enum HabLevel {
  COOP = 0;
  SHACK = 1;
  SUPER_SHACK = 2;
  SHORT_HOUSE = 3;
  THE_STANDARD = 4;
  LONG_HOUSE = 5;
  DOUBLE_DECKER = 6;
  WAREHOUSE = 7;
  CENTER = 8;
  BUNKER = 9;
  EGGKEA = 10;
  HAB_1000 = 11;
  HANGAR = 12;
  TOWER = 13;
  HAB_10_000 = 14;
  EGGTOPIA = 15;
  MONOLITH = 16;
  PLANET_PORTAL = 17;
  CHICKEN_UNIVERSE = 18;
  NO_HAB = 19;
}

enum VehicleType {
  TRIKE = 0;
  TRANSIT = 1;
  PICKUP = 2;
  VEHICLE_10_FOOT = 3;
  VEHICLE_24_FOOT = 4;
  SEMI = 5;
  DOUBLE_SEMI = 6;
  FUTURE_SEMI = 7;
  MEGA_SEMI = 8;
  HOVER_SEMI = 9;
  QUANTUM_TRANSPORTER = 10;
  HYPERLOOP_TRAIN = 11;
}

enum TrophyLevel {
  NO_TROPHY = 0;
  BRONZE = 1;
  SILVER = 2;
  GOLD = 3;
  PLATINUM = 4;
  DIAMOND = 5;
}

enum League {
  NORMAL = 0;
  ELITE = 1;
}
